/* automatically generated by rust-bindgen */

pub type __s8 = ::std::os::raw::c_char;
pub type __u8 = ::std::os::raw::c_uchar;
pub type __s16 = ::std::os::raw::c_short;
pub type __u16 = ::std::os::raw::c_ushort;
pub type __s32 = ::std::os::raw::c_int;
pub type __u32 = ::std::os::raw::c_uint;
pub type __s64 = ::std::os::raw::c_longlong;
pub type __u64 = ::std::os::raw::c_ulonglong;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_Unnamed1 {
    pub fds_bits: [::std::os::raw::c_ulong; 16usize],
}
impl ::std::clone::Clone for Struct_Unnamed1 {
    fn clone(&self) -> Self { *self }
}
impl ::std::default::Default for Struct_Unnamed1 {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub type __kernel_fd_set = Struct_Unnamed1;
pub type __kernel_sighandler_t =
    ::std::option::Option<extern "C" fn(arg1: ::std::os::raw::c_int)>;
pub type __kernel_key_t = ::std::os::raw::c_int;
pub type __kernel_mqd_t = ::std::os::raw::c_int;
pub type __kernel_old_uid_t = ::std::os::raw::c_ushort;
pub type __kernel_old_gid_t = ::std::os::raw::c_ushort;
pub type __kernel_old_dev_t = ::std::os::raw::c_ulong;
pub type __kernel_long_t = ::std::os::raw::c_long;
pub type __kernel_ulong_t = ::std::os::raw::c_ulong;
pub type __kernel_ino_t = __kernel_ulong_t;
pub type __kernel_mode_t = ::std::os::raw::c_uint;
pub type __kernel_pid_t = ::std::os::raw::c_int;
pub type __kernel_ipc_pid_t = ::std::os::raw::c_int;
pub type __kernel_uid_t = ::std::os::raw::c_uint;
pub type __kernel_gid_t = ::std::os::raw::c_uint;
pub type __kernel_suseconds_t = __kernel_long_t;
pub type __kernel_daddr_t = ::std::os::raw::c_int;
pub type __kernel_uid32_t = ::std::os::raw::c_uint;
pub type __kernel_gid32_t = ::std::os::raw::c_uint;
pub type __kernel_size_t = __kernel_ulong_t;
pub type __kernel_ssize_t = __kernel_long_t;
pub type __kernel_ptrdiff_t = __kernel_long_t;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_Unnamed2 {
    pub val: [::std::os::raw::c_int; 2usize],
}
impl ::std::clone::Clone for Struct_Unnamed2 {
    fn clone(&self) -> Self { *self }
}
impl ::std::default::Default for Struct_Unnamed2 {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub type __kernel_fsid_t = Struct_Unnamed2;
pub type __kernel_off_t = __kernel_long_t;
pub type __kernel_loff_t = ::std::os::raw::c_longlong;
pub type __kernel_time_t = __kernel_long_t;
pub type __kernel_clock_t = __kernel_long_t;
pub type __kernel_timer_t = ::std::os::raw::c_int;
pub type __kernel_clockid_t = ::std::os::raw::c_int;
pub type __kernel_caddr_t = *mut ::std::os::raw::c_char;
pub type __kernel_uid16_t = ::std::os::raw::c_ushort;
pub type __kernel_gid16_t = ::std::os::raw::c_ushort;
pub type __le16 = __u16;
pub type __be16 = __u16;
pub type __le32 = __u32;
pub type __be32 = __u32;
pub type __le64 = __u64;
pub type __be64 = __u64;
pub type __sum16 = __u16;
pub type __wsum = __u32;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_nfattr {
    pub nfa_len: __u16,
    pub nfa_type: __u16,
}
impl ::std::clone::Clone for Struct_nfattr {
    fn clone(&self) -> Self { *self }
}
impl ::std::default::Default for Struct_nfattr {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[derive(Clone, Copy)]
#[repr(u32)]
pub enum Enum_nfnetlink_groups {
    NFNLGRP_NONE = 0,
    NFNLGRP_CONNTRACK_NEW = 1,
    NFNLGRP_CONNTRACK_UPDATE = 2,
    NFNLGRP_CONNTRACK_DESTROY = 3,
    NFNLGRP_CONNTRACK_EXP_NEW = 4,
    NFNLGRP_CONNTRACK_EXP_UPDATE = 5,
    NFNLGRP_CONNTRACK_EXP_DESTROY = 6,
    NFNLGRP_NFTABLES = 7,
    NFNLGRP_ACCT_QUOTA = 8,
    __NFNLGRP_MAX = 9,
}
#[repr(C)]
#[derive(Copy)]
pub struct Struct_nfgenmsg {
    pub nfgen_family: __u8,
    pub version: __u8,
    pub res_id: __be16,
}
impl ::std::clone::Clone for Struct_nfgenmsg {
    fn clone(&self) -> Self { *self }
}
impl ::std::default::Default for Struct_nfgenmsg {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[derive(Clone, Copy)]
#[repr(u32)]
pub enum Enum_nfulnl_msg_types {
    NFULNL_MSG_PACKET = 0,
    NFULNL_MSG_CONFIG = 1,
    NFULNL_MSG_MAX = 2,
}
#[repr(C)]
#[derive(Copy)]
pub struct Struct_nfulnl_msg_packet_hdr {
    pub hw_protocol: __be16,
    pub hook: __u8,
    pub _pad: __u8,
}
impl ::std::clone::Clone for Struct_nfulnl_msg_packet_hdr {
    fn clone(&self) -> Self { *self }
}
impl ::std::default::Default for Struct_nfulnl_msg_packet_hdr {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy)]
pub struct Struct_nfulnl_msg_packet_hw {
    pub hw_addrlen: __be16,
    pub _pad: __u16,
    pub hw_addr: [__u8; 8usize],
}
impl ::std::clone::Clone for Struct_nfulnl_msg_packet_hw {
    fn clone(&self) -> Self { *self }
}
impl ::std::default::Default for Struct_nfulnl_msg_packet_hw {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy)]
pub struct Struct_nfulnl_msg_packet_timestamp {
    pub sec: __be64,
    pub usec: __be64,
}
impl ::std::clone::Clone for Struct_nfulnl_msg_packet_timestamp {
    fn clone(&self) -> Self { *self }
}
impl ::std::default::Default for Struct_nfulnl_msg_packet_timestamp {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[derive(Clone, Copy)]
#[repr(u32)]
pub enum Enum_nfulnl_attr_type {
    NFULA_UNSPEC = 0,
    NFULA_PACKET_HDR = 1,
    NFULA_MARK = 2,
    NFULA_TIMESTAMP = 3,
    NFULA_IFINDEX_INDEV = 4,
    NFULA_IFINDEX_OUTDEV = 5,
    NFULA_IFINDEX_PHYSINDEV = 6,
    NFULA_IFINDEX_PHYSOUTDEV = 7,
    NFULA_HWADDR = 8,
    NFULA_PAYLOAD = 9,
    NFULA_PREFIX = 10,
    NFULA_UID = 11,
    NFULA_SEQ = 12,
    NFULA_SEQ_GLOBAL = 13,
    NFULA_GID = 14,
    NFULA_HWTYPE = 15,
    NFULA_HWHEADER = 16,
    NFULA_HWLEN = 17,
    NFULA_CT = 18,
    NFULA_CT_INFO = 19,
    __NFULA_MAX = 20,
}
#[derive(Clone, Copy)]
#[repr(u32)]
pub enum Enum_nfulnl_msg_config_cmds {
    NFULNL_CFG_CMD_NONE = 0,
    NFULNL_CFG_CMD_BIND = 1,
    NFULNL_CFG_CMD_UNBIND = 2,
    NFULNL_CFG_CMD_PF_BIND = 3,
    NFULNL_CFG_CMD_PF_UNBIND = 4,
}
#[repr(C, packed)]
#[derive(Copy)]
pub struct Struct_nfulnl_msg_config_cmd {
    pub command: __u8,
}
impl ::std::clone::Clone for Struct_nfulnl_msg_config_cmd {
    fn clone(&self) -> Self { *self }
}
impl ::std::default::Default for Struct_nfulnl_msg_config_cmd {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C, packed)]
#[derive(Copy)]
pub struct Struct_nfulnl_msg_config_mode {
    pub copy_range: __be32,
    pub copy_mode: __u8,
    pub _pad: __u8,
}
impl ::std::clone::Clone for Struct_nfulnl_msg_config_mode {
    fn clone(&self) -> Self { *self }
}
impl ::std::default::Default for Struct_nfulnl_msg_config_mode {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[derive(Clone, Copy)]
#[repr(u32)]
pub enum Enum_nfulnl_attr_config {
    NFULA_CFG_UNSPEC = 0,
    NFULA_CFG_CMD = 1,
    NFULA_CFG_MODE = 2,
    NFULA_CFG_NLBUFSIZ = 3,
    NFULA_CFG_TIMEOUT = 4,
    NFULA_CFG_QTHRESH = 5,
    NFULA_CFG_FLAGS = 6,
    __NFULA_CFG_MAX = 7,
}
